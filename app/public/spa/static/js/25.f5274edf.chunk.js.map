{"version":3,"sources":["components/ContentBox.tsx","views/main/Main-AddQuestions.tsx"],"names":["ContentBox","props","style","width","height","padding","background","overflowY","title","borderRadius","Module","this","Component","Option","Input","TextArea","Select","editor","editor1","AddQuestions","inject","observer","state","layout","labelCol","span","wrapperCol","tailLayout","offset","visible","values","showModal","setState","openNotification","notification","open","message","description","icon","color","handleOk","addTestList","handleCancel","onFinish","console","log","onFinishFailed","errorInfo","getText","alert","txt","text","examine","getType","getSubject","getQuestion","E","config","zIndex","create","destroy","res","localStorage","getItem","result","JSON","parse","Axios","post","questions_type_id","questions_stem","subject_id","exam_id","user_id","questions_answer","type","data","code","value","subjectType","subjectList","questionsType","className","name","initialValues","remember","val","Item","rules","required","placeholder","maxLength","id","defaultValue","onChange","vals","handleChange","map","item","key","exam_name","subject_text","questions_type_text","htmlType","onOk","onCancel","cancelText","okText"],"mappings":"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","file":"static/js/25.f5274edf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n    Module: any\r\n    title: string\r\n}\r\n\r\nconst ContentBox = (props:Props):any => {\r\n    return class ContentBox extends Component {\r\n        render() {\r\n            return <div style={{width:\"100%\",height:\"100%\",padding: '20px',background:'#f0f2f5',overflowY:'auto'}}>\r\n                    <h2 style={{ padding: '10px 0' }}>{props.title}</h2>\r\n                    <div style={{ width:\"100%\",height:\"100%\",background:'#fff',borderRadius:'10px'}}>\r\n                        <props.Module {...this.props}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentBox\r\n\r\n//高阶组件，用于content的样式和标题展示","import ContentBox from '@/components/ContentBox'\r\nimport React, { Component } from 'react'\r\nimport { Form, Input, Button, Select, Modal, notification } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\nimport {\r\n    LeftOutlined,\r\n    RightOutlined,\r\n    SlackSquareOutlined,\r\n    DisconnectOutlined,\r\n    FormOutlined,\r\n    CreditCardOutlined,\r\n    FullscreenOutlined,\r\n    EyeTwoTone,\r\n} from '@ant-design/icons';\r\nimport { inject, observer } from \"mobx-react\"\r\nimport Axios from '@/utils/request';\r\nimport E from 'wangeditor'\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nlet editor :E|null = null;\r\nlet editor1 :E|null = null;\r\ninterface IState {\r\n    layout: object;\r\n    tailLayout: object;\r\n    visible: boolean;\r\n    values: any;\r\n}\r\n\r\n@inject('examine') @observer\r\nclass AddQuestions extends Component<any, IState> {\r\n    state = {\r\n        layout: {\r\n            labelCol: { span: 8 },\r\n            wrapperCol: { span: 16 },\r\n        },\r\n        tailLayout: {\r\n            wrapperCol: { offset: 8, span: 16 },\r\n        },\r\n        visible: false,\r\n        values: null,\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    openNotification = () => {\r\n        notification.open({\r\n            message: '恭喜你！',\r\n            description: \"添加成功，快去查看吧！\",\r\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n        });\r\n    };\r\n    handleOk = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n        const { values } = this.state\r\n        this.addTestList(values)\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.examine.getType()\r\n        this.props.examine.getSubject()\r\n        this.props.examine.getQuestion()\r\n        editor = new E(\"#box1\")\r\n        editor1 = new E(\"#box2\")\r\n        //权重\r\n        editor.config.zIndex = 500\r\n        editor1.config.zIndex = 500\r\n        editor.create()\r\n        editor1.create()\r\n    }\r\n    componentWillUnmount(){\r\n        editor?.destroy();\r\n        editor1?.destroy();\r\n    }\r\n    onFinish = (values: any) => {\r\n        console.log(values)\r\n        this.setState({\r\n            values: values\r\n        })\r\n        this.showModal()\r\n    };\r\n\r\n    //添加试题\r\n    async addTestList(values: any) {\r\n        let res: any = localStorage.getItem(\"userInfo\");\r\n        let result = JSON.parse(res)\r\n        let text = await Axios.post('/exam/questions', {\r\n            questions_type_id: values.questions_type_id,\r\n            questions_stem: (editor as E).txt.text(),\r\n            subject_id: values.subject_id,\r\n            exam_id: values.exam_id,\r\n            user_id: result.user_id,\r\n            questions_answer: (editor1 as E).txt.text(),\r\n            type: \"addQuestions/addQuestions\",\r\n            title: values.title,\r\n        })\r\n        console.log(text.data.code)\r\n        if (text.data.code === 1) {\r\n            this.openNotification()\r\n        }\r\n\r\n    }\r\n    onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    handleChange(value: any) {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n     getText = () =>{\r\n        alert((editor as E).txt.text())\r\n        console.log((editor as E).txt.text())\r\n      }\r\n\r\n\r\n    render() {\r\n        const { subjectType, subjectList, questionsType } = this.props.examine\r\n        return (\r\n            <div className=\"hu-addtest\">\r\n                <Form\r\n                    {...this.state.layout}\r\n                    name=\"basic\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={(val) => this.onFinish(val)}\r\n\r\n                >\r\n                    <h2>题目信息</h2>\r\n                    <div className=\"test-stem\">\r\n                        <h2>题干</h2>\r\n                        <Form.Item\r\n                            name=\"title\"\r\n                            rules={[{ required: true, message: '请输入题目标题！' }]}\r\n                        >\r\n                            <Input placeholder=\"请输入题目标题，不超过20个字！\" maxLength={20} />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"test-subject\">\r\n                        <div className=\"subject-title\">\r\n                            <h2>题目主题</h2>\r\n                        </div>\r\n                            <div id=\"box1\"></div>\r\n                    </div>\r\n                    <div>\r\n                        <h2>请选择考试类型</h2>\r\n                        <Form.Item\r\n                            name=\"exam_id\"\r\n                            rules={[{ required: true, message: '请选择考试类型！' }]}\r\n                        >\r\n                            <Select defaultValue=\"请选择\" style={{ width: 260 }} onChange={(vals) => this.handleChange(vals)}>\r\n                                {\r\n                                    subjectType.map((item: any) => {\r\n                                        return <Option key={item.exam_id} value={item.exam_id}>{item.exam_name}</Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <h2>请选择课程类型</h2>\r\n                        <Form.Item\r\n                            name=\"subject_id\"\r\n                            rules={[{ required: true, message: '请选择课程类型' }]}\r\n                        >\r\n                            <Select defaultValue=\"请选择\" style={{ width: 260 }} onChange={(vals) => this.handleChange(vals)}>\r\n                                {\r\n                                    subjectList.map((item: any) => {\r\n                                        return <Option key={item.subject_id} value={item.subject_id}>{item.subject_text}</Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div>\r\n                        <h2>请选择题目类型</h2>\r\n                        <Form.Item\r\n                            name=\"questions_type_id\"\r\n                            rules={[{ required: true, message: '请选择题目类型！' }]}\r\n                        >\r\n                            <Select defaultValue=\"请选择\" style={{ width: 260 }} onChange={(vals) => this.handleChange(vals)} id=\"first\">\r\n                                {\r\n                                    questionsType.map((item: any) => {\r\n                                        return <Option id=\"mines\" key={item.questions_type_id} value={item.questions_type_id}>{item.questions_type_text}</Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"test-answer\">\r\n                        <div className=\"test-answer-title\">\r\n                            <h2>答案信息</h2>\r\n                        </div>\r\n                        <div className=\"test-content\">\r\n                                <div id=\"box2\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form>\r\n                <Modal\r\n                    title=\"Basic Modal\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    cancelText=\"取消\"\r\n                    okText=\"确认\"\r\n                >\r\n                    <p>是否确定要添加？？？</p>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentBox({\r\n    title: '添加试题',\r\n    Module: AddQuestions\r\n})\r\n"],"sourceRoot":""}