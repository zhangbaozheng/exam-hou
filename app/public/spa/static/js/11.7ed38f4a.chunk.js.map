{"version":3,"sources":["components/ContentBox.tsx","api/exam.ts","../node_modules/_@ant-design_icons-svg@4.1.0@@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/_@ant-design_icons@4.2.2@@ant-design/icons/es/icons/SearchOutlined.js","views/main/Main-ExamList.tsx"],"names":["ContentBox","props","style","width","height","padding","background","overflowY","title","borderRadius","Module","this","Component","_getExamList","val","request","get","params","_getExam","url","_getAnswer","_correctExam","exam_student_id","score","put","_getTestDetail","id","_getTestList","_getTestType","_getTestSubject","_addTest","values","post","_TestDetail","exam_exam_id","_getQues","_getQuesType","_getQuesCon","subject_id","exam_id","questions_type_id","SearchOutlined","ref","React","AntdIcon","Object","assign","icon","SearchOutlinedSvg","displayName","Option","Select","handleChange","value","console","log","ExamList","state","data","type","sub","getTestList","getTestSubject","getTestType","res","code","setState","exam","history","push","pathname","columns","dataIndex","key","fixed","render","text","record","onClick","goDetail","className","marginLeft","onChange","map","item","exam_name","subject_text","dataSource"],"mappings":"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","file":"static/js/11.7ed38f4a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n    Module: any\r\n    title: string\r\n}\r\n\r\nconst ContentBox = (props:Props):any => {\r\n    return class ContentBox extends Component {\r\n        render() {\r\n            return <div style={{width:\"100%\",height:\"100%\",padding: '20px',background:'#f0f2f5',overflowY:'auto'}}>\r\n                    <h2 style={{ padding: '10px 0' }}>{props.title}</h2>\r\n                    <div style={{ width:\"100%\",height:\"100%\",background:'#fff',borderRadius:'10px'}}>\r\n                        <props.Module {...this.props}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentBox\r\n\r\n//高阶组件，用于content的样式和标题展示","/*\r\n * @Descripttion: \r\n * @version: 1.0\r\n * @Author: 赵舒婷\r\n * @Date: 2020-10-20 13:20:29\r\n * @LastEditors: 赵舒婷\r\n * @LastEditTime: 2020-10-20 20:37:49\r\n */\r\nimport request from '@/utils/request'\r\nexport function _getExamList(val:any){ //拿班级对应的学生名单\r\n    let url = '/exam/student'\r\n    return request.get(url,{\r\n        params:val\r\n    })\r\n}\r\nexport function _getExam(val:string){ //通过试卷id获取试卷\r\n    let url = `/exam/exam/${val}`\r\n    return request.get(url)\r\n\r\n}\r\nexport function _getAnswer(val:string){ //通过学生id获取试卷详情\r\n    let url = `/exam/student/${val}`\r\n    return request.get(url)\r\n\r\n}  \r\n\r\nexport function _correctExam({exam_student_id,score}:any){ //批改分数\r\n    let url = `/exam/student/${exam_student_id}`\r\n    return request.put(url,{score})\r\n}\r\n\r\nexport function _getTestDetail(id:string){\r\n    let url='/exam/exam'\r\n    return request.get(url,{params:{id}})\r\n}\r\n//试题列表\r\n\r\nexport function _getTestList() {\r\n    let url='/exam/exam'\r\n    return request.get(url)\r\n};\r\n//考试类型\r\nexport function _getTestType(){\r\n    let url='/exam/examType'\r\n    return request.get(url)\r\n}\r\n//选择课程\r\nexport function _getTestSubject(){\r\n    let url='/exam/subject'\r\n    return request.get(url)\r\n}\r\n\r\n//添加试卷\r\nexport function _addTest(values:any){\r\n    let url='/exam/exam'\r\n    return request.post(url,values)\r\n}\r\n//试卷详情\r\nexport function _TestDetail({exam_exam_id}:any){\r\n    let url=`/exam/exam`\r\n    return request.get(url,exam_exam_id)\r\n}\r\n//试题获取\r\nexport function _getQues(){\r\n    let url='/exam/questions/new'\r\n    return request.get(url)\r\n}\r\n//问题类型\r\nexport function _getQuesType(){\r\n    let url='/exam/getQuestionsType'\r\n    return request.get(url)\r\n}\r\n//按条件获取试题\r\n\r\nexport function _getQuesCon(subject_id: any,exam_id:any,questions_type_id:any)\r\n{\r\n    let url=`/exam/questions/condition?subject_id=${subject_id}&exam_id=${exam_id}&questions_type_id=${questions_type_id}`;\r\n    return request.get(url)\r\n}\r\n","// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\n\nSearchOutlined.displayName = 'SearchOutlined';\nexport default React.forwardRef(SearchOutlined);","import React, { Component } from 'react'\r\nimport ContentBox from '@/components/ContentBox'\r\nimport { Button, Select, Table } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { _getTestList, _getTestSubject, _getTestType, _getTestDetail } from '@/api/exam'\r\nconst { Option } = Select;\r\n\r\nfunction handleChange(value: string) {\r\n    console.log(`selected ${value}`);\r\n}\r\ninterface Props {\r\n    history: any\r\n}\r\ninterface State {\r\n\r\n}\r\nclass ExamList extends Component<Props, State> {\r\n    state = {\r\n        data: [],\r\n        type: [],\r\n        sub: []\r\n    }\r\n    componentDidMount() {\r\n        this.getTestList()\r\n        this.getTestSubject()\r\n        this.getTestType()\r\n\r\n    }\r\n    //班级信息\r\n    async getTestList() {\r\n        const res = await _getTestList();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                data: res.data.exam\r\n            })\r\n        }\r\n    }\r\n    async getTestType() {\r\n        const res = await _getTestType();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                type: res.data.data\r\n            })\r\n        }\r\n    }\r\n    async getTestSubject() {\r\n        const res = await _getTestSubject();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                sub: res.data.data\r\n            })\r\n        }\r\n    }\r\n    async getTestDetail(id: string) {\r\n        const res = await _getTestDetail(id);\r\n        if (res.data.code) {\r\n            this.setState({\r\n                sub: res.data.data\r\n            })\r\n        }\r\n    }\r\n    goDetail(exam_exam_id: string) {\r\n        this.props.history.push({pathname:`/index/ExamDetail/${exam_exam_id}`,state:{exam_exam_id}})\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: '试卷信息',\r\n                dataIndex: 'title',\r\n                key: 'title',\r\n                fixed: 'left',\r\n            },\r\n            {\r\n                title: '班级',\r\n                dataIndex: 'grade_name',\r\n                key: 'grade_name',\r\n                fixed: 'left',\r\n            },\r\n            { title: '创建人', dataIndex: '', key: '1' },\r\n            { title: '开始时间', dataIndex: 'start_time', key: 'start_time' },\r\n            { title: '结束时间', dataIndex: 'end_time', key: 'end_time' },\r\n            {\r\n                title: '操作',\r\n                key: '2',\r\n                fixed: 'right',\r\n                width: 100,\r\n                render: (text: any, record: any) => <span onClick={() => this.goDetail(record.exam_exam_id)}>详情</span>,\r\n            },\r\n        ];\r\n        return (\r\n            <div className='s-list'>\r\n                <div className='s-search'>\r\n                    <span className='s-span'>考试类型:</span>\r\n                    <Select style={{ width: '180px', marginLeft: '30px' }} onChange={handleChange}>\r\n                        {\r\n                            this.state.type.map((item: any) => {\r\n                                return <Option value={item.exam_id} key={item.exam_id}>{item.exam_name}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                    <span className='s-span'>课程:</span>\r\n                    <Select style={{ width: '180px', marginLeft: '30px' }} onChange={handleChange}>\r\n                        {\r\n                            this.state.sub.map((item: any) => {\r\n                                return <Option value={item.subject_id} key={item.subject_id}>{item.subject_text}</Option>\r\n                            })\r\n                        }\r\n                    </Select>\r\n                    <Button type=\"primary\"><SearchOutlined />查询</Button>\r\n                </div>\r\n                <div className=\"s-list-box\">\r\n                    <p>试卷列表</p>\r\n                    <Table columns={columns as any} dataSource={this.state.data} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentBox({\r\n    title: '试卷列表',\r\n    Module: ExamList\r\n})\r\n"],"sourceRoot":""}