{"version":3,"sources":["components/ContentBox.tsx","api/exam.ts","views/main/Main-AddExam.tsx"],"names":["ContentBox","props","style","width","height","padding","background","overflowY","title","borderRadius","Module","this","Component","_getExamList","val","request","get","params","_getExam","url","_getAnswer","_correctExam","exam_student_id","score","put","_getTestDetail","id","_getTestList","_getTestType","_getTestSubject","_addTest","values","post","_TestDetail","exam_exam_id","_getQues","_getQuesType","_getQuesCon","subject_id","exam_id","questions_type_id","Option","Select","onFinishFailed","errorInfo","console","log","AddExam","state","fields","number","start_time","end_time","type","sub","onFinish","a","Object","assign","Number","data","code","message","info","history","push","pathname","getTestSubject","getTestType","res","setState","className","initialValues","name","Item","label","rules","required","marginBottom","map","item","value","key","subject_text","exam_name","min","max","margin","htmlType"],"mappings":"mJAoBeA,IAbI,SAACC,GAChB,8KAEQ,OAAO,yBAAKC,MAAO,CAACC,MAAM,OAAOC,OAAO,OAAOC,QAAS,OAAOC,WAAW,UAAUC,UAAU,SACtF,wBAAIL,MAAO,CAAEG,QAAS,WAAaJ,EAAMO,OACzC,yBAAKN,MAAO,CAAEC,MAAM,OAAOC,OAAO,OAAOE,WAAW,OAAOG,aAAa,SACpE,kBAACR,EAAMS,OAAWC,KAAKV,aAL3C,GAAgCW,e,iCCRpC,scASO,SAASC,EAAaC,GAEzB,OAAOC,IAAQC,IADL,gBACa,CACnBC,OAAOH,IAGR,SAASI,EAASJ,GACrB,IAAIK,EAAG,qBAAiBL,GACxB,OAAOC,IAAQC,IAAIG,GAGhB,SAASC,EAAWN,GACvB,IAAIK,EAAG,wBAAoBL,GAC3B,OAAOC,IAAQC,IAAIG,GAIhB,SAASE,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,gBAAgBC,EAAW,EAAXA,MACtCJ,EAAG,wBAAoBG,GAC3B,OAAOP,IAAQS,IAAIL,EAAI,CAACI,UAGrB,SAASE,EAAeC,GAE3B,OAAOX,IAAQC,IADP,aACe,CAACC,OAAO,CAACS,QAI7B,SAASC,IAEZ,OAAOZ,IAAQC,IADP,cAIL,SAASY,IAEZ,OAAOb,IAAQC,IADP,kBAIL,SAASa,IAEZ,OAAOd,IAAQC,IADP,iBAKL,SAASc,EAASC,GAErB,OAAOhB,IAAQiB,KADP,aACgBD,GAGrB,SAASE,EAAT,GAAyC,IAAnBC,EAAkB,EAAlBA,aAEzB,OAAOnB,IAAQC,IADP,aACekB,GAGpB,SAASC,IAEZ,OAAOpB,IAAQC,IADP,uBAIL,SAASoB,IAEZ,OAAOrB,IAAQC,IADP,0BAKL,SAASqB,EAAYC,EAAgBC,EAAYC,GAEpD,IAAIrB,EAAI,wCAAD,OAAyCmB,EAAzC,oBAA+DC,EAA/D,8BAA4FC,GACnG,OAAOzB,IAAQC,IAAIG,K,sMCxEfsB,EAAWC,IAAXD,OACFE,EAAiB,SAACC,GACpBC,QAAQC,IAAI,UAAWF,IASrBG,E,4MACFC,MAAQ,CACJC,OAAQ,CACJX,WAAY,GACZC,QAAS,GACT/B,MAAO,GACP0C,OAAQ,GACRC,WAAY,GACZC,SAAU,IAEdC,KAAM,GACNC,IAAK,I,EAyBTC,S,uCAAW,WAAOxB,GAAP,SAAAyB,EAAA,6DACPzB,EAAS0B,OAAOC,OAAO,EAAKV,MAAMC,OAAQlB,EAAQ,CAC9CmB,OAAQS,OAAO5B,EAAOmB,QACtBC,WAAYQ,OAAO5B,EAAOoB,YAC1BC,SAAUO,OAAO5B,EAAOqB,YAJrB,SAMWtB,YAAS,EAAKkB,MAAMC,QAN/B,cAOCW,KAAKC,MACTC,IAAQC,KAAK,4BACb,EAAK9D,MAAM+D,QAAQC,KAAK,CAAEC,SAAU,kBAAmBlB,MAAO,CAAEjB,aAEhE+B,IAAQC,KAAK,4BAXV,2C,wHAtBPpD,KAAKwD,iBACLxD,KAAKyD,gB,oKAKaxC,c,QAAZyC,E,QACET,KAAKC,MACTlD,KAAK2D,SAAS,CACVjB,KAAMgB,EAAIT,KAAKA,O,6QAML/B,c,QAAZwC,E,QACET,KAAKC,MACTlD,KAAK2D,SAAS,CACVhB,IAAKe,EAAIT,KAAKA,O,qIAmBtB,OACI,yBAAKW,UAAU,SACX,kBAAC,IAAD,CACIC,cAAe7D,KAAKqC,MAAMC,OAC1BwB,KAAK,QACLlB,SAAU5C,KAAK4C,SACfZ,eAAgBA,GAGhB,kBAAC,IAAK+B,KAAN,CACIC,MAAM,2BACNF,KAAK,QACLG,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,gDACnC5D,MAAO,CAAE4E,aAAc,SAEvB,kBAAC,IAAD,OAEJ,kBAAC,IAAKJ,KAAN,CACIC,MAAM,2BACNF,KAAK,aACLG,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,gDACnC5D,MAAO,CAAE4E,aAAc,SAEvB,kBAAC,IAAD,CAAQ5E,MAAO,CAAEC,MAAO,UAEhBQ,KAAKqC,MAAMM,IAAIyB,KAAI,SAACC,GAChB,OAAO,kBAACvC,EAAD,CAAQwC,MAAOD,EAAK1C,WAAY4C,IAAKF,EAAK1C,YAAa0C,EAAKG,mBAKnF,kBAAC,IAAKT,KAAN,CACIC,MAAM,2BACNF,KAAK,UACLG,MAAO,CAAC,CAAEC,UAAU,EAAMf,QAAS,oCACnC5D,MAAO,CAAE4E,aAAc,SAEvB,kBAAC,IAAD,CAAQ5E,MAAO,CAAEC,MAAO,UAEhBQ,KAAKqC,MAAMK,KAAK0B,KAAI,SAACC,GACjB,OAAO,kBAACvC,EAAD,CAAQwC,MAAOD,EAAKzC,QAAS2C,IAAKF,EAAKzC,SAAUyC,EAAKI,gBAK7E,kBAAC,IAAKV,KAAN,CAAWD,KAAM,CAAC,UAAWE,MAAM,2BAC/BC,MAAO,CAAC,CAAEC,UAAU,EAAMxB,KAAM,SAAUgC,IAAK,EAAGC,IAAK,KACvDpF,MAAO,CAAE4E,aAAc,SAEvB,kBAAC,IAAD,OAEJ,yBAAKP,UAAU,UACX,kBAAC,IAAKG,KAAN,CAAWD,KAAK,aAAaE,MAAM,2BAAOC,MAAO,CAAC,CAAEC,UAAU,KAC1D,kBAAC,IAAD,OAEJ,0BAAM3E,MAAO,CAAEqF,OAAQ,aAAvB,KACA,kBAAC,IAAKb,KAAN,CAAWD,KAAK,YACZ,kBAAC,IAAD,QAIR,kBAAC,IAAKC,KAAN,KACI,kBAAC,IAAD,CAAQrB,KAAK,UAAUmC,SAAS,UAAhC,mC,GAjHF5E,aA2HPZ,sBAAW,CACtBQ,MAAO,2BACPE,OAAQqC","file":"static/js/18.1f0cfffb.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n    Module: any\r\n    title: string\r\n}\r\n\r\nconst ContentBox = (props:Props):any => {\r\n    return class ContentBox extends Component {\r\n        render() {\r\n            return <div style={{width:\"100%\",height:\"100%\",padding: '20px',background:'#f0f2f5',overflowY:'auto'}}>\r\n                    <h2 style={{ padding: '10px 0' }}>{props.title}</h2>\r\n                    <div style={{ width:\"100%\",height:\"100%\",background:'#fff',borderRadius:'10px'}}>\r\n                        <props.Module {...this.props}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentBox\r\n\r\n//高阶组件，用于content的样式和标题展示","/*\r\n * @Descripttion: \r\n * @version: 1.0\r\n * @Author: 赵舒婷\r\n * @Date: 2020-10-20 13:20:29\r\n * @LastEditors: 赵舒婷\r\n * @LastEditTime: 2020-10-20 20:37:49\r\n */\r\nimport request from '@/utils/request'\r\nexport function _getExamList(val:any){ //拿班级对应的学生名单\r\n    let url = '/exam/student'\r\n    return request.get(url,{\r\n        params:val\r\n    })\r\n}\r\nexport function _getExam(val:string){ //通过试卷id获取试卷\r\n    let url = `/exam/exam/${val}`\r\n    return request.get(url)\r\n\r\n}\r\nexport function _getAnswer(val:string){ //通过学生id获取试卷详情\r\n    let url = `/exam/student/${val}`\r\n    return request.get(url)\r\n\r\n}  \r\n\r\nexport function _correctExam({exam_student_id,score}:any){ //批改分数\r\n    let url = `/exam/student/${exam_student_id}`\r\n    return request.put(url,{score})\r\n}\r\n\r\nexport function _getTestDetail(id:string){\r\n    let url='/exam/exam'\r\n    return request.get(url,{params:{id}})\r\n}\r\n//试题列表\r\n\r\nexport function _getTestList() {\r\n    let url='/exam/exam'\r\n    return request.get(url)\r\n};\r\n//考试类型\r\nexport function _getTestType(){\r\n    let url='/exam/examType'\r\n    return request.get(url)\r\n}\r\n//选择课程\r\nexport function _getTestSubject(){\r\n    let url='/exam/subject'\r\n    return request.get(url)\r\n}\r\n\r\n//添加试卷\r\nexport function _addTest(values:any){\r\n    let url='/exam/exam'\r\n    return request.post(url,values)\r\n}\r\n//试卷详情\r\nexport function _TestDetail({exam_exam_id}:any){\r\n    let url=`/exam/exam`\r\n    return request.get(url,exam_exam_id)\r\n}\r\n//试题获取\r\nexport function _getQues(){\r\n    let url='/exam/questions/new'\r\n    return request.get(url)\r\n}\r\n//问题类型\r\nexport function _getQuesType(){\r\n    let url='/exam/getQuestionsType'\r\n    return request.get(url)\r\n}\r\n//按条件获取试题\r\n\r\nexport function _getQuesCon(subject_id: any,exam_id:any,questions_type_id:any)\r\n{\r\n    let url=`/exam/questions/condition?subject_id=${subject_id}&exam_id=${exam_id}&questions_type_id=${questions_type_id}`;\r\n    return request.get(url)\r\n}\r\n","import React, { Component } from 'react'\r\nimport ContentBox from '@/components/ContentBox'\r\nimport { Form, Input, Button, Select, DatePicker, InputNumber, message } from 'antd';\r\nimport { _addTest, _getTestSubject, _getTestType } from '@/api/exam'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nconst { Option } = Select;\r\nconst onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\n\r\n\r\ninterface Iprops {\r\n    history: any\r\n}\r\ntype Props = Iprops & RouteComponentProps\r\n\r\nclass AddExam extends Component<Props> {\r\n    state = {\r\n        fields: {\r\n            subject_id: '',\r\n            exam_id: '',\r\n            title: '',\r\n            number: '',\r\n            start_time: '',\r\n            end_time: ''\r\n        },\r\n        type: [],\r\n        sub: []\r\n    }\r\n    componentDidMount() {\r\n        this.getTestSubject()\r\n        this.getTestType()\r\n\r\n    }\r\n    //考试类型\r\n    async getTestType() {\r\n        const res = await _getTestType();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                type: res.data.data\r\n            })\r\n        }\r\n    }\r\n    //课程\r\n    async getTestSubject() {\r\n        const res = await _getTestSubject();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                sub: res.data.data\r\n            })\r\n        }\r\n    }\r\n    onFinish = async (values: any) => {\r\n        values = Object.assign(this.state.fields, values, {\r\n            number: Number(values.number),\r\n            start_time: Number(values.start_time),\r\n            end_time: Number(values.end_time)\r\n        })\r\n        const res = await _addTest(this.state.fields);\r\n        if (res.data.code) {\r\n            message.info('添加成功');\r\n            this.props.history.push({ pathname: \"/index/examEdit\", state: { values } })\r\n        } else {\r\n            message.info('添加失败');\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className='s-add' >\r\n                <Form\r\n                    initialValues={this.state.fields}\r\n                    name=\"basic\"\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n\r\n                >\r\n                    <Form.Item\r\n                        label=\"试卷名称\"\r\n                        name=\"title\"\r\n                        rules={[{ required: true, message: '请输入试卷名称!' }]}\r\n                        style={{ marginBottom: '70px' }}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"考试类型\"\r\n                        name='subject_id'\r\n                        rules={[{ required: true, message: '请输入考试类型!' }]}\r\n                        style={{ marginBottom: '70px' }}\r\n                    >\r\n                        <Select style={{ width: '120px' }}>\r\n                            {\r\n                                this.state.sub.map((item: any) => {\r\n                                    return <Option value={item.subject_id} key={item.subject_id}>{item.subject_text}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"选择课程\"\r\n                        name='exam_id'\r\n                        rules={[{ required: true, message: '请输入课程!' }]}\r\n                        style={{ marginBottom: '70px' }}\r\n                    >\r\n                        <Select style={{ width: '120px' }}>\r\n                            {\r\n                                this.state.type.map((item: any) => {\r\n                                    return <Option value={item.exam_id} key={item.exam_id}>{item.exam_name}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item name={['number']} label=\"设置题量\"\r\n                        rules={[{ required: true, type: 'number', min: 0, max: 99 }]}\r\n                        style={{ marginBottom: '70px' }}\r\n                    >\r\n                        <InputNumber />\r\n                    </Form.Item>\r\n                    <div className=\"s-time\">\r\n                        <Form.Item name=\"start_time\" label=\"创建时间\" rules={[{ required: true }]} >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <span style={{ margin: '0px 20px' }}>-</span>\r\n                        <Form.Item name=\"end_time\" >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                    </div>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" >\r\n                            创建试卷\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentBox({\r\n    title: '添加考试',\r\n    Module: AddExam\r\n})\r\n"],"sourceRoot":""}