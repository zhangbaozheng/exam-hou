{"version":3,"sources":["components/ContentBox.tsx","components/NotData.tsx","views/main/Main-WatchQuestions.tsx"],"names":["ContentBox","props","style","width","height","padding","background","overflowY","title","borderRadius","Module","this","Component","NotData","status","subTitle","Option","Select","WatchQuestions","inject","observer","state","flag","curIndex","exam_id","undefined","subject_id","questions_type_id","changeAll","setState","changeCruindex","ind","id","goDetail","home","setTitle","history","push","search","examine","getText","getExaminList","getSubject","getType","getQuestion","getAllUser","type","value","examineList","subjectList","subjectType","questionsType","className","onClick","map","item","key","subject_text","onChange","handleChange","bind","index","exam_name","questions_type_text","icon","SearchOutlined","length","questions_id","color","user_name","href"],"mappings":"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","file":"static/js/30.b1e49510.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n    Module: any\r\n    title: string\r\n}\r\n\r\nconst ContentBox = (props:Props):any => {\r\n    return class ContentBox extends Component {\r\n        render() {\r\n            return <div style={{width:\"100%\",height:\"100%\",padding: '20px',background:'#f0f2f5',overflowY:'auto'}}>\r\n                    <h2 style={{ padding: '10px 0' }}>{props.title}</h2>\r\n                    <div style={{ width:\"100%\",height:\"100%\",background:'#fff',borderRadius:'10px'}}>\r\n                        <props.Module {...this.props}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentBox\r\n\r\n//高阶组件，用于content的样式和标题展示","import React, { Component } from 'react'\r\nimport { Result, Button } from 'antd';\r\nexport default class NotData extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Result\r\n                    status=\"404\"\r\n                    subTitle=\"暂无数据\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Select, Button, Tag } from 'antd'\r\nimport NotData from \"@/components/NotData\"\r\nimport { inject, observer } from \"mobx-react\"\r\nimport ContentBox from '@/components/ContentBox'\r\nimport { SearchOutlined } from '@ant-design/icons'\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\n\r\nconst { Option } = Select;\r\n\r\ninterface IProps {\r\n    examine: any\r\n    home:any\r\n}\r\ninterface IState {\r\n    flag: boolean;\r\n    curIndex: number\r\n    exam_id: string | undefined\r\n    subject_id: string | undefined\r\n    questions_type_id: string | undefined\r\n}\r\n\r\n\r\n@inject('examine','home') @observer\r\nclass WatchQuestions extends Component<IProps & RouteComponentProps, IState> {\r\n    state = {\r\n        flag: false,\r\n        curIndex: -1,\r\n        exam_id: undefined,\r\n        subject_id: undefined,\r\n        questions_type_id: undefined\r\n    }\r\n    componentDidMount() {\r\n        this.props.examine.getExaminList()\r\n        this.props.examine.getSubject()\r\n        this.props.examine.getType()\r\n        this.props.examine.getQuestion()\r\n        this.props.examine.getAllUser()\r\n    }\r\n\r\n    handleChange(type: string, value: any) {\r\n\r\n        switch (type) {\r\n            case \"examid\":\r\n                this.setState({\r\n                    exam_id: value\r\n                })\r\n            break\r\n            case \"question\":\r\n                    this.setState({\r\n                        questions_type_id:value\r\n                })\r\n            break\r\n        }\r\n    }\r\n    changeAll = () => {\r\n        this.setState({\r\n            flag: !this.state.flag,\r\n            curIndex: -1\r\n        })\r\n    }\r\n    changeCruindex = (ind: number, id: string) => {\r\n        this.setState({\r\n            curIndex: ind,\r\n            subject_id: id\r\n        })\r\n    }\r\n    goDetail = (id: string) => {\r\n        this.props.home.setTitle('详情页面')\r\n        this.props.history.push(`/index/examDetail/${id}`)\r\n    }\r\n    search = () => {\r\n        const { exam_id,subject_id,questions_type_id } = this.state\r\n        this.props.examine.getText(exam_id,subject_id,questions_type_id)\r\n    }\r\n    render() {\r\n        const { examineList, subjectList, subjectType, questionsType, getText } = this.props.examine\r\n        const { flag, curIndex } = this.state\r\n        return (\r\n            <div className=\"hu-examine\">\r\n                <div className=\"examine-title\">\r\n                    <div className=\"title-top\">\r\n                        <div className=\"left\">课程类型：</div>\r\n                        <div className=\"right\">\r\n                            <span onClick={() => this.changeAll()} className={this.state.flag ? \"actives\" : \"\"}>All</span>\r\n                            {\r\n                                subjectList.map((item: any, ind: number) => {\r\n                                    return <span key={ind}\r\n                                        className={flag || curIndex === ind ? 'actives' : ''}\r\n                                        onClick={() => this.changeCruindex(ind, item.subject_id)}>\r\n                                        {item.subject_text}\r\n                                    </span>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"title-bottom\">\r\n                        <div>\r\n                            <span>考试类型：</span>\r\n                            <Select style={{ width: 200 }} onChange={this.handleChange.bind(this, 'examid')}>\r\n                                {\r\n                                    subjectType.map((item: any, index: number) => {\r\n                                        return <Option value={item.exam_id} key={index}>{item.exam_name}</Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </div>\r\n                        <div>\r\n                            <span>题目类型：</span>\r\n                            <Select style={{ width: 200 }} onChange={this.handleChange.bind(this, 'question')}>\r\n                                {\r\n                                    questionsType.map((item: any, index: number) => {\r\n                                        return <Option value={item.questions_type_id} key={index}>{item.questions_type_text}</Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </div>\r\n                        <div>\r\n                            <Button type=\"primary\" icon={<SearchOutlined />} onClick={() => this.search()}>查询</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"examine-main\">\r\n                    {\r\n                        examineList.length === 0?<NotData/>:\r\n                        <ul>\r\n                        {\r\n                            examineList.map((item: any, index: number) => {\r\n                                return <li key={index} >\r\n                                    <div className=\"left\" onClick={() => this.goDetail(item.questions_id)}>\r\n                                        <h2>{item.title}</h2>\r\n                                        <p>\r\n                                            <Tag color=\"blue\">{item.questions_type_text}</Tag>\r\n                                            <Tag color=\"blue\">{item.subject_text}</Tag>\r\n                                            <Tag color=\"orange\">{item.exam_name}</Tag>\r\n                                        </p>\r\n                                        <p className=\"hu-author\">\r\n                                            <span>{item.user_name}发布</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"right\">\r\n                                        <a href=\"#\">编辑</a>\r\n                                    </div>\r\n\r\n                                </li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentBox({\r\n    title: '查看试题',\r\n    Module: WatchQuestions\r\n})\r\n"],"sourceRoot":""}