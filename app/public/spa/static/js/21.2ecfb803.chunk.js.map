{"version":3,"sources":["components/ContentBox.tsx","api/exam.ts","views/main/Main-ExaminationPapers.tsx"],"names":["ContentBox","props","style","width","height","padding","background","overflowY","title","borderRadius","Module","this","Component","_getExamList","val","request","get","params","_getExam","url","_getAnswer","_correctExam","exam_student_id","score","put","_getTestDetail","id","_getTestList","_getTestType","_getTestSubject","_addTest","values","post","_TestDetail","exam_exam_id","_getQues","_getQuesType","_getQuesCon","subject_id","exam_id","questions_type_id","ExaminationPapers","state","examData","answerData","text","className","span","length","map","item","index","key","Date","now","questions_answer","student_answer","image","Empty","PRESENTED_IMAGE_SIMPLE","color","defaultValue","onChange","placement","onConfirm","confirm","okText","cancelText","type","history","location","data","code","message","info","push","pathname","query","grade_id","grade_name","exSid","getExam","getAnswer","result","setState","questions","value"],"mappings":"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","file":"static/js/21.2ecfb803.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n    Module: any\r\n    title: string\r\n}\r\n\r\nconst ContentBox = (props:Props):any => {\r\n    return class ContentBox extends Component {\r\n        render() {\r\n            return <div style={{width:\"100%\",height:\"100%\",padding: '20px',background:'#f0f2f5',overflowY:'auto'}}>\r\n                    <h2 style={{ padding: '10px 0' }}>{props.title}</h2>\r\n                    <div style={{ width:\"100%\",height:\"100%\",background:'#fff',borderRadius:'10px'}}>\r\n                        <props.Module {...this.props}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentBox\r\n\r\n//高阶组件，用于content的样式和标题展示","/*\r\n * @Descripttion: \r\n * @version: 1.0\r\n * @Author: 赵舒婷\r\n * @Date: 2020-10-20 13:20:29\r\n * @LastEditors: 赵舒婷\r\n * @LastEditTime: 2020-10-20 20:37:49\r\n */\r\nimport request from '@/utils/request'\r\nexport function _getExamList(val:any){ //拿班级对应的学生名单\r\n    let url = '/exam/student'\r\n    return request.get(url,{\r\n        params:val\r\n    })\r\n}\r\nexport function _getExam(val:string){ //通过试卷id获取试卷\r\n    let url = `/exam/exam/${val}`\r\n    return request.get(url)\r\n\r\n}\r\nexport function _getAnswer(val:string){ //通过学生id获取试卷详情\r\n    let url = `/exam/student/${val}`\r\n    return request.get(url)\r\n\r\n}  \r\n\r\nexport function _correctExam({exam_student_id,score}:any){ //批改分数\r\n    let url = `/exam/student/${exam_student_id}`\r\n    return request.put(url,{score})\r\n}\r\n\r\nexport function _getTestDetail(id:string){\r\n    let url='/exam/exam'\r\n    return request.get(url,{params:{id}})\r\n}\r\n//试题列表\r\n\r\nexport function _getTestList() {\r\n    let url='/exam/exam'\r\n    return request.get(url)\r\n};\r\n//考试类型\r\nexport function _getTestType(){\r\n    let url='/exam/examType'\r\n    return request.get(url)\r\n}\r\n//选择课程\r\nexport function _getTestSubject(){\r\n    let url='/exam/subject'\r\n    return request.get(url)\r\n}\r\n\r\n//添加试卷\r\nexport function _addTest(values:any){\r\n    let url='/exam/exam'\r\n    return request.post(url,values)\r\n}\r\n//试卷详情\r\nexport function _TestDetail({exam_exam_id}:any){\r\n    let url=`/exam/exam`\r\n    return request.get(url,exam_exam_id)\r\n}\r\n//试题获取\r\nexport function _getQues(){\r\n    let url='/exam/questions/new'\r\n    return request.get(url)\r\n}\r\n//问题类型\r\nexport function _getQuesType(){\r\n    let url='/exam/getQuestionsType'\r\n    return request.get(url)\r\n}\r\n//按条件获取试题\r\n\r\nexport function _getQuesCon(subject_id: any,exam_id:any,questions_type_id:any)\r\n{\r\n    let url=`/exam/questions/condition?subject_id=${subject_id}&exam_id=${exam_id}&questions_type_id=${questions_type_id}`;\r\n    return request.get(url)\r\n}\r\n","import React, { Component } from 'react'\r\nimport ContentBox from '@/components/ContentBox'\r\nimport { _getExam, _getAnswer, _correctExam } from '@/api/exam'\r\nimport { Row, Col, Empty, Slider, Popconfirm, message, Button } from 'antd';\r\n\r\n\r\ninterface IProps {\r\n    history: any\r\n}\r\n\r\ninterface IState{\r\n    [key:string]:any\r\n}\r\nclass ExaminationPapers extends Component<IProps,IState> {\r\n    constructor(props:IProps){\r\n        super(props)\r\n        this.state = {\r\n            score: 0,\r\n            examData: [],   //试卷列表\r\n            answerData: [], //答案列表\r\n            text: '你确定提交阅卷吗？'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"zst-classdetail\">\r\n                <h2>阅卷</h2>\r\n                <Row>\r\n                    <Col span={12} className=\"zst-col1\">\r\n                        {\r\n                            this.state.examData.length ? this.state.examData.map((item: any, index: number) => {\r\n                                return <dl key={Date.now() + index}>\r\n                                    <dt><span>第{index + 1}题</span><h3>{item.title}</h3></dt>\r\n                                    <dd><span>正确答案：</span>{item.questions_answer}</dd>\r\n                                    <dd><span>学生答案：</span>{this.state.answerData.length ? (this.state.answerData[index] as any).student_answer : ''}</dd>\r\n                                </dl>\r\n                            }) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        }\r\n\r\n                    </Col>\r\n                    <Col span={10} className=\"zst-col2\">\r\n                        <h2>得分：<span style={{ color: 'blue' }}>{this.state.score}</span></h2>\r\n                        <Slider defaultValue={0} onChange={(val: number) => { this.onChange(val) }} />\r\n                        <Popconfirm placement=\"top\" title={this.state.text} onConfirm={() => { this.confirm() }} okText=\"是\" cancelText=\"否\">\r\n                            <Button type=\"primary\">确定</Button>\r\n                        </Popconfirm>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    async confirm() {\r\n\r\n        const result = await _correctExam({ exam_student_id: this.props.history.location.state.exam_student_id, score: this.state.score })\r\n\r\n        if (result.data.code === 1) { //批改成功\r\n            message.info('批改成功', 1, () => {\r\n                this.props.history.push({\r\n                    pathname: '/index/ExamPaperClassmate',\r\n                    query: {\r\n                        grade_id: this.props.history.location.state.grade_id,\r\n                        grade_name: this.props.history.location.state.grade_name\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.history.location.state) {\r\n            let id = this.props.history.location.state.exam_exam_id //试卷id\r\n            let exSid = this.props.history.location.state.exam_student_id //要批改的学生id\r\n            this.getExam(id)\r\n            this.getAnswer(exSid)\r\n        }\r\n\r\n    }\r\n    async getExam(id: string) { //拿试卷\r\n        const result = await _getExam(id)\r\n\r\n        if (result.data.code === 1) {\r\n            this.setState({\r\n                examData: result.data.data.questions\r\n            })\r\n        }\r\n    }\r\n    async getAnswer(exSid: string) { //拿学生答案\r\n\r\n        const result = await _getAnswer(exSid)\r\n\r\n        if (result.data.code === 1) {\r\n\r\n            this.setState({\r\n                answerData: result.data.data.questions\r\n            })\r\n        }\r\n    }\r\n    onChange(value: number) {\r\n        this.setState({\r\n            score: value\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default ContentBox({\r\n    title: \"阅卷\",\r\n    Module: ExaminationPapers\r\n})"],"sourceRoot":""}