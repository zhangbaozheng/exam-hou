{"version":3,"sources":["components/ContentBox.tsx","api/userAdd.ts","components/ControllerUser/User-IdAdd.tsx","components/ControllerUser/User-ApiAdd.tsx","components/ControllerUser/User-AddView.tsx","components/ControllerUser/User-ApiSet.tsx","components/ControllerUser/User-IdView.tsx","config/User-Add.tsx","components/ControllerUser/User-Add.tsx","components/ControllerUser/User-Update.tsx","views/main/Main-AddUser.tsx"],"names":["ContentBox","props","style","width","height","padding","background","overflowY","title","borderRadius","Module","this","Component","_identity","request","get","_userEdit","values","params","identity_text","_userApiEdit","api_authority_method","api_authority_text","api_authority_url","_userAddView","view_authority_text","arr","view_id","_userSetApi","value","post","_userIdentity","_userSetApiView","IdUserAdd","formRef","state","idData","updateData","onFinish","userEdit","onReset","current","resetFields","React","createRef","layout","tailLayout","ref","name","Item","placeholder","type","htmlType","onClick","undefined","message","error","result","data","code","msg","success","userApiEdit","Option","Select","UpdateUser","viewData","userInfo","userAddView","reload","callback","allowClear","map","item","index","key","userView","setState","info","filter","obj","ApiSetUser","AuthData","userSetApi","identity_id","api_authority_id","userIdentity","userAuthority","userSetApiView","view_authority_id","console","log","labelCol","span","wrapperCol","offset","AddUserConfig","tab","com","UserAdd","userAdd","noStyle","shouldUpdate","prevValues","currentValues","gender","getFieldValue","label","rules","required","identity","userObj","user_name","user_pwd","updateUsers","user_id","updateUser","put","TabPane","Tabs","AddUser","forceUpdate","className","onChange"],"mappings":"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","file":"static/js/26.4c788d96.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n    Module: any\r\n    title: string\r\n}\r\n\r\nconst ContentBox = (props:Props):any => {\r\n    return class ContentBox extends Component {\r\n        render() {\r\n            return <div style={{width:\"100%\",height:\"100%\",padding: '20px',background:'#f0f2f5',overflowY:'auto'}}>\r\n                    <h2 style={{ padding: '10px 0' }}>{props.title}</h2>\r\n                    <div style={{ width:\"100%\",height:\"100%\",background:'#fff',borderRadius:'10px'}}>\r\n                        <props.Module {...this.props}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentBox\r\n\r\n//高阶组件，用于content的样式和标题展示","/*\r\n * @Author: 大郑\r\n * @Date: 2020-10-20 19:38:32\r\n * @LastEditTime: 2020-10-23 10:57:22\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\exam-L\\src\\api\\userAdd.ts\r\n */\r\nimport request from \"@/utils/request\";\r\n//添加用户\r\nexport function _userAdd(userObj: object) {\r\n  let url = \"/user\";\r\n  return request.post(url, userObj);\r\n}\r\n//获取身份id信息\r\nexport function _identity() {\r\n  let url = \"/user/identity\";\r\n  return request.get(url);\r\n}\r\n//更新用户信息\r\nexport function _updateUser() {\r\n  let url = \"/user/user\";\r\n  return request.get(url);\r\n}\r\n\r\nexport function _updateUsers(userObj: object) {\r\n  let url = \"/user/user\";\r\n  return request.put(url, userObj);\r\n}\r\n//添加身份\r\nexport function _userEdit(values: string) {\r\n  let url = \"/user/identity/edit\";\r\n  return request.get(url, {\r\n    params: {\r\n      identity_text: values,\r\n    },\r\n  });\r\n}\r\n//添加api接口权限\r\nexport function _userApiEdit(values: any) {\r\n  let url = \"/user/authorityApi/edit\";\r\n  return request.get(url, {\r\n    params: {\r\n      api_authority_method: values.api_authority_method,\r\n      api_authority_text: values.api_authority_text,\r\n      api_authority_url: values.api_authority_url,\r\n    },\r\n  });\r\n}\r\n//添加视图接口权限\r\nexport function _userAddView(values: any) {\r\n  let view_authority_text = values.arr[0].view_authority_text;\r\n  let url = \"/user/authorityView/edit\";\r\n  return request.get(url, {\r\n    params: {\r\n      view_authority_text: view_authority_text,\r\n      view_id: values.view_id,\r\n    },\r\n  });\r\n}\r\n//获取已有视图数据\r\nexport function _userView() {\r\n  let url = \"/user/view_authority\";\r\n  return request.get(url);\r\n}\r\n//给身份设置api视图权限\r\nexport function _userSetApi(value: object) {\r\n  let url = \"/user/setIdentityApi\";\r\n  return request.post(url, value);\r\n}\r\n//获取身份数据\r\nexport function _userIdentity() {\r\n  let url = \"/user/identity\";\r\n  return request.get(url);\r\n}\r\n//获取所有考试数据\r\nexport function _userAuthority() {\r\n  let url = \"/user/api_authority\";\r\n  return request.get(url);\r\n}\r\nexport function _view_authority() {\r\n  let url = \"/user/view_authority\";\r\n  return request.get(url);\r\n}\r\n\r\n//设置身份视图权限\r\nexport function _userSetApiView(value: object) {\r\n  let url = \"/user/setIdentityView\";\r\n  return request.post(url, value);\r\n}","import React, { Component } from \"react\";\r\nimport { _userEdit } from \"@/api/userAdd\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\ninterface Props {\r\n  layout: any;\r\n  tailLayout: any;\r\n}\r\ninterface State {}\r\nclass IdUserAdd extends Component<Props, State> {\r\n  formRef: any;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.formRef = React.createRef<FormInstance>();\r\n  }\r\n  state = {\r\n    idData: [],\r\n    updateData: [],\r\n  };\r\n  //提交事件\r\n  onFinish = (values: any) => {\r\n    this.userEdit(values.identity_text);\r\n  };\r\n  //重置事件\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  render() {\r\n    const { layout, tailLayout } = this.props;\r\n    return (\r\n      <>\r\n        <Form\r\n          {...layout}\r\n          ref={this.formRef}\r\n          name=\"control-ref\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          {/**填写用户名*/}\r\n          <Form.Item name=\"identity_text\">\r\n            <Input placeholder=\"请输入身份名称\" />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={this.onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n  async userEdit(values: string) {\r\n    try {\r\n      if (values === undefined) {\r\n        message.error(\"用户名不能为空\");\r\n      }\r\n      let result = await _userEdit(values);\r\n      switch (result.data.code) {\r\n        case 0:\r\n          message.error(result.data.msg);\r\n          break;\r\n        case 1:\r\n          message.success(result.data.msg);\r\n          break;\r\n      }\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\nexport default IdUserAdd;\r\n","import React, { Component } from \"react\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { _userApiEdit } from \"@/api/userAdd\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\ninterface Props {\r\n  layout:any,\r\n  tailLayout:any,\r\n}\r\ninterface State {}\r\n\r\nclass IdUserAdd extends Component<Props, State> {\r\n  formRef: any;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.formRef = React.createRef<FormInstance>();\r\n  }\r\n  state = {\r\n    idData: [],\r\n    updateData: [],\r\n  };\r\n  //提交事件\r\n  onFinish = (values: object) => {\r\n    this.userApiEdit(values);\r\n  };\r\n  //重置事件\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  render() {\r\n    const {layout,tailLayout} = this.props;\r\n    return (\r\n      <>\r\n        <Form\r\n          {...layout}\r\n          ref={this.formRef}\r\n          name=\"control-ref\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          {/**填写api接口权限名称*/}\r\n          <Form.Item name=\"api_authority_text\">\r\n            <Input placeholder=\"请输入api接口权限名称\" />\r\n          </Form.Item>\r\n          {/**填写api接口权限url*/}\r\n          <Form.Item name=\"api_authority_url\">\r\n            <Input placeholder=\"请输入api接口权限url\" />\r\n          </Form.Item>\r\n          {/**填写api接口权限方法*/}\r\n          <Form.Item name=\"api_authority_method\">\r\n            <Input placeholder=\"请输入api接口权限方法\" />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={this.onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n  async userApiEdit(values: any) {\r\n    try {\r\n      //判断内容为空\r\n      if (\r\n        values.api_authority_url === undefined &&\r\n        values.api_authority_text === undefined &&\r\n        values.api_authority_method === undefined\r\n      ) {\r\n        return message.error(\"内容不能为空\");\r\n      }\r\n      let result = await _userApiEdit(values);\r\n      switch (result.data.code) {\r\n        //用户重复\r\n        case 0: {\r\n          message.error(result.data.msg);\r\n          break;\r\n        }\r\n        case 1: {\r\n          //添加成功\r\n          message.success(result.data.msg);\r\n          break;\r\n        }\r\n      }\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\nexport default IdUserAdd;\r\n","import React, { Component } from \"react\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { Form, Button, Select, message } from \"antd\";\r\nimport { _userAddView, _userView } from \"@/api/userAdd\";\r\nimport { userData } from \"@/config/User-data\";\r\nconst { Option } = Select;\r\ninterface Props {\r\n  layout: any;\r\n  tailLayout: any;\r\n}\r\ninterface State {}\r\n\r\nclass UpdateUser extends Component<Props, State> {\r\n  formRef: any;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.formRef = React.createRef<FormInstance>();\r\n  }\r\n  state = {\r\n    viewData: [],\r\n    userInfo: \"\",\r\n  };\r\n\r\n  //提交事件\r\n  onFinish = (values: object) => {\r\n    this.userAddView(values);\r\n    (this.props as any).reload();\r\n  };\r\n  //重置事件\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  callback: ((activeKey: string) => void) | undefined;\r\n  render() {\r\n    const { layout, tailLayout } = this.props;\r\n    return (\r\n      // <>\r\n      //   {\r\n      //     userData\r\n      //   }\r\n      // </>\r\n      <>\r\n        <Form\r\n          {...layout}\r\n          ref={this.formRef}\r\n          name=\"control-ref\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          <Form.Item name=\"view_id\">\r\n            <Select placeholder=\"添加视图接口权限\" allowClear>\r\n              {this.state.viewData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.view_id} key={index}>\r\n                    {item.view_authority_text}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={this.onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.userView();\r\n  }\r\n  async userView() {\r\n    let result = await _userView();\r\n    this.setState({\r\n      viewData: result.data.data,\r\n    });\r\n  }\r\n  async userAddView(values: any) {\r\n    try {\r\n      if (values.view_id === undefined) {\r\n        return message.error(\"内容不能为空\");\r\n      }\r\n      let info = this.state.viewData.filter(\r\n        (item: any) => item.view_id === values.view_id\r\n      );\r\n      let obj = {\r\n        arr: info,\r\n        view_id: values.view_id,\r\n      };\r\n      let result = await _userAddView(obj);\r\n      switch (result.data.code) {\r\n        case 0: {\r\n          message.error(result.data.msg);\r\n          break;\r\n        }\r\n        case 1: {\r\n          message.success(result.data.msg);\r\n          break;\r\n        }\r\n      }\r\n    } catch (error) {}\r\n  }\r\n}\r\n\r\nexport default UpdateUser;\r\n","import React, { Component } from \"react\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { _userIdentity, _userAuthority, _userSetApi } from \"@/api/userAdd\";\r\nimport { Form, Button, Select, message } from \"antd\";\r\n\r\nconst { Option } = Select;\r\ninterface Props {\r\n  layout:any,\r\n  tailLayout:any,\r\n}\r\ninterface State {}\r\n\r\nclass ApiSetUser extends Component<Props, State> {\r\n  formRef: any;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.formRef = React.createRef<FormInstance>();\r\n  }\r\n  state = {\r\n    viewData: [],\r\n    AuthData: [],\r\n    userInfo: \"\",\r\n  };\r\n  //提交事件\r\n  onFinish = (values: object) => {\r\n    this.userSetApi(values);\r\n  };\r\n  //重置事件\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  callback: ((activeKey: string) => void) | undefined;\r\n  render() {\r\n    const {layout,tailLayout} = this.props;\r\n    return (\r\n      <>\r\n        <Form\r\n          {...layout}\r\n          ref={this.formRef}\r\n          name=\"control-ref\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          <Form.Item name=\"identity_id\">\r\n            <Select placeholder=\"请选择身份id\" allowClear>\r\n              {this.state.viewData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.identity_id} key={index}>\r\n                    {item.identity_text}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          {/**选择api接口权限*/}\r\n          <Form.Item name=\"api_authority_id\">\r\n            <Select placeholder=\"请选择api接口权限\" allowClear>\r\n              {this.state.AuthData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.api_authority_id} key={index}>\r\n                    {item.api_authority_text}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={this.onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.userIdentity();\r\n    this.userAuthority();\r\n  }\r\n  //获取身份数据\r\n  async userIdentity() {\r\n    let result = await _userIdentity();\r\n    this.setState({\r\n      viewData: result.data.data,\r\n    });\r\n  }\r\n  //获取所有考试数据\r\n  async userAuthority() {\r\n    let result = await _userAuthority();\r\n    this.setState({\r\n      AuthData: result.data.data,\r\n    });\r\n  }\r\n  //设置数据\r\n  async userSetApi(value: any) {\r\n    if (\r\n      value.api_authority_id === undefined &&\r\n      value.identity_id === undefined\r\n    ) {\r\n      return message.error(\"内容不能为空\");\r\n    }\r\n    let result = await _userSetApi(value);\r\n    switch (result.data.code) {\r\n      case 0: {\r\n        message.error(result.data.msg);\r\n        break;\r\n      }\r\n      case 1: {\r\n        message.success(result.data.msg);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ApiSetUser;\r\n","import React, { Component } from \"react\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { Form, Button, Select, message } from \"antd\";\r\nimport { _userIdentity, _view_authority, _userSetApiView } from \"@/api/userAdd\";\r\n\r\nconst { Option } = Select;\r\ninterface Props {\r\n  layout:any,\r\n  tailLayout:any\r\n}\r\ninterface State {}\r\n\r\nclass ApiSetUser extends Component<Props, State> {\r\n  formRef: any;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.formRef = React.createRef<FormInstance>();\r\n  }\r\n  state = {\r\n    viewData: [],\r\n    AuthData: [],\r\n    userInfo: \"\",\r\n  };\r\n  //提交事件\r\n  onFinish = (values: object) => {\r\n    this.userSetApiView(values);\r\n  };\r\n  //重置事件\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  callback: ((activeKey: string) => void) | undefined;\r\n  render() {\r\n    const {layout,tailLayout} = this.props;\r\n    return (\r\n      <>\r\n        <Form\r\n          {...layout}\r\n          ref={this.formRef}\r\n          name=\"control-ref\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          {/**选择身份id*/}\r\n          <Form.Item name=\"identity_id\">\r\n            <Select placeholder=\"请选择身份id\" allowClear>\r\n              {this.state.viewData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.identity_id} key={index}>\r\n                    {item.identity_text}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          {/**选择api接口权限*/}\r\n          <Form.Item name=\"view_authority_id\">\r\n            <Select placeholder=\"请选择api接口权限\" allowClear>\r\n              {this.state.AuthData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.view_authority_id} key={index}>\r\n                    {item.view_authority_text}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={this.onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>   \r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.userIdentity();\r\n    this.userAuthority();\r\n  }\r\n  //获取身份数据\r\n  async userIdentity() {\r\n    let result = await _userIdentity();\r\n\r\n    this.setState({\r\n      viewData: result.data.data,\r\n    });\r\n  }\r\n  //获取所有考试数据\r\n  async userAuthority() {\r\n    let result = await _view_authority();\r\n    console.log(result);\r\n    this.setState({\r\n      AuthData: result.data.data,\r\n    });\r\n  }\r\n  //设置数据视图\r\n  async userSetApiView(value: any) {\r\n    if (\r\n      value.identity_id === undefined &&\r\n      value.view_authority_id === undefined\r\n    ) {\r\n      return message.error(\"内容不能为空\");\r\n    }\r\n    let result = await _userSetApiView(value);\r\n    switch (result.data.code) {\r\n      case 0: {\r\n        message.error(result.data.msg);\r\n        break;\r\n      }\r\n      case 1: {\r\n        message.success(result.data.msg);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ApiSetUser;\r\n","import React from \"react\";\r\nimport UserIdAdd from \"@/components/ControllerUser/User-IdAdd\";\r\nimport UserApiAdd from \"@/components/ControllerUser/User-ApiAdd\";\r\nimport UserAddView from \"@/components/ControllerUser/User-AddView\";\r\nimport UserApiSet from \"@/components/ControllerUser/User-ApiSet\";\r\nimport UserIdView from \"@/components/ControllerUser/User-IdView\";\r\nconst state = {\r\n  layout: {\r\n    labelCol: { span: 20 },\r\n    wrapperCol: { span: 18 },\r\n  },\r\n  tailLayout: {\r\n    wrapperCol: { offset: 0, span: 20 },\r\n  },\r\n};\r\nconsole.log(state.layout);\r\nconst AddUserConfig = [\r\n    {\r\n        tab: \"身份\",\r\n        type: \"card\",\r\n        com: <UserIdAdd layout={state.layout} tailLayout={state.tailLayout}></UserIdAdd>,\r\n      },\r\n      {\r\n        tab: \"添加api权限\",\r\n        type: \"card\",\r\n        com: <UserApiAdd layout={state.layout} tailLayout={state.tailLayout}></UserApiAdd>,\r\n      },\r\n      {\r\n        tab: \"添加视图接口权限\",\r\n        type: \"card\",\r\n        com: <UserAddView layout={state.layout} tailLayout={state.tailLayout}></UserAddView>,\r\n      },\r\n      {\r\n        tab: \"给身份设置api接口权限\",\r\n        type: \"card\",\r\n        com: <UserApiSet layout={state.layout} tailLayout={state.tailLayout}></UserApiSet>,\r\n      },\r\n      {\r\n        tab: \"给身份设置视图权限\",\r\n        type: \"card\",\r\n        com: <UserIdView layout={state.layout} tailLayout={state.tailLayout}></UserIdView>,\r\n      },\r\n]\r\nexport default AddUserConfig","import React, { Component } from \"react\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { _userAdd, _identity } from \"@/api/userAdd\";\r\nimport { Form, Input, Button, Select, message } from \"antd\";\r\n\r\nconst { Option } = Select;\r\ninterface Props {\r\n  layout:any,\r\n  tailLayout:any,\r\n}\r\ninterface State {}\r\n\r\nclass UserAdd extends Component<Props, State> {\r\n  formRef: any;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.formRef = React.createRef<FormInstance>();\r\n  }\r\n  state = {\r\n    idData: [],\r\n    updateData: [],\r\n  };\r\n  //提交事件\r\n  onFinish = (values: object) => {\r\n    this.userAdd(values);\r\n    (this.props as any).reload();\r\n  };\r\n  //重置事件\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  callback: ((activeKey: string) => void) | undefined;\r\n  render() {\r\n    const {layout,tailLayout} = this.props;\r\n    return (\r\n      <>\r\n        <Form\r\n          {...layout}\r\n          ref={this.formRef}\r\n          name=\"control-ref\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          {/**填写用户名*/}\r\n          <Form.Item name=\"user_name\">\r\n            <Input placeholder=\"请输入用户名\" />\r\n          </Form.Item>\r\n          {/**填写密码*/}\r\n          <Form.Item name=\"user_pwd\">\r\n            <Input placeholder=\"请输入密码\" />\r\n          </Form.Item>\r\n          {/**填写身份id*/}\r\n          <Form.Item name=\"identity_id\">\r\n            <Select placeholder=\"请选择身份id\" allowClear>\r\n              {this.state.idData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.identity_id} key={index}>\r\n                    {item.identity_text}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            noStyle\r\n            shouldUpdate={(prevValues, currentValues) =>\r\n              prevValues.gender !== currentValues.gender\r\n            }\r\n          >\r\n            {({ getFieldValue }) => {\r\n              return getFieldValue(\"gender\") === \"other\" ? (\r\n                <Form.Item\r\n                  name=\"customizeGender\"\r\n                  label=\"Customize Gender\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              ) : null;\r\n            }}\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={this.onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.identity();\r\n  }\r\n  //添加用户\r\n  async userAdd(values: any) {\r\n    let result = await _userAdd(values);\r\n    if (\r\n      values.user_name === undefined &&\r\n      values.user_pwd === undefined &&\r\n      values.identity_id === undefined\r\n    ) {\r\n      return message.error(\"内容不能为空\");\r\n    }\r\n    switch (result.data.code) {\r\n      case 0: {\r\n        message.error(result.data.msg);\r\n        break;\r\n      }\r\n      case 1: {\r\n        message.success(result.data.msg);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  //获取身份id信息\r\n  async identity() {\r\n    let result = await _identity();\r\n    this.setState({\r\n      idData: result.data.data,\r\n    });\r\n  }\r\n}\r\n\r\nexport default UserAdd;\r\n","import React, { Component } from \"react\";\r\nimport { FormInstance } from \"antd/lib/form\";\r\nimport { Form, Input, Button, Select, message } from \"antd\";\r\nimport { _identity, _updateUser, _updateUsers } from \"@/api/userAdd\";\r\n\r\nconst { Option } = Select;\r\ninterface Props {}\r\ninterface State {}\r\n\r\nclass UpdateUser extends Component<Props, State> {\r\n  formRef: any;\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.formRef = React.createRef<FormInstance>();\r\n  }\r\n  state = {\r\n    layout: {\r\n      labelCol: { span: 20 },\r\n      wrapperCol: { span: 18 },\r\n    },\r\n    tailLayout: {\r\n      wrapperCol: { offset: 0, span: 20 },\r\n    },\r\n    idData: [],\r\n    updateData: [],\r\n  };\r\n  //提交事件\r\n  onFinish = (values: object) => {\r\n    this.updateUsers(values);\r\n  };\r\n  //重置事件\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n  callback: ((activeKey: string) => void) | undefined;\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form\r\n          {...this.state.layout}\r\n          ref={this.formRef}\r\n          name=\"control-ref\"\r\n          onFinish={this.onFinish}\r\n        >\r\n          {/**用户选择 */}\r\n          <Form.Item name=\"user_id\" rules={[{ required: true }]}>\r\n            <Select placeholder=\"请选择身份id\" allowClear>\r\n              {this.state.updateData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.user_id} key={index}>\r\n                    {item.user_name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          {/**填写用户名*/}\r\n          <Form.Item name=\"user_name\">\r\n            <Input placeholder=\"请输入用户名\" />\r\n          </Form.Item>\r\n          {/**填写密码*/}\r\n          <Form.Item name=\"user_pwd\">\r\n            <Input placeholder=\"请输入密码\" />\r\n          </Form.Item>\r\n          {/**用户身份选择 */}\r\n          <Form.Item name=\"identity_id\">\r\n            <Select placeholder=\"请选择身份id\" allowClear>\r\n              {this.state.idData.map((item: any, index: number) => {\r\n                return (\r\n                  <Option value={item.identity_id} key={index}>\r\n                    {item.identity_text}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item {...this.state.tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              提交\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={this.onReset}>\r\n              重置\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.identity();\r\n    this.updateUser();\r\n  }\r\n  //获取身份id信息\r\n  async identity() {\r\n    let result = await _identity();\r\n    this.setState({\r\n      idData: result.data.data,\r\n    });\r\n  }\r\n  //更新用户信息\r\n  async updateUser() {\r\n    let result = await _updateUser();\r\n    this.setState({\r\n      updateData: result.data.data,\r\n    });\r\n  }\r\n  //更新\r\n  async updateUsers(values: object) {\r\n    let result = await _updateUsers(values);\r\n    if (result.data.code) {\r\n      message.success(result.data.msg);\r\n    }\r\n  }\r\n}\r\n\r\nexport default UpdateUser;\r\n","// @ts-nocheck\r\nimport { Tabs } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport AddUserConfig from '@/config/User-Add';\r\nimport ContentBox from \"@/components/ContentBox\";\r\nimport UserAdd from \"@/components/ControllerUser/User-Add\";\r\nimport UpdateUser from \"@/components/ControllerUser/User-Update\";\r\n\r\nconst { TabPane } = Tabs;\r\ninterface Props { }\r\ninterface State { }\r\n\r\nclass AddUser extends Component<Props, State> {\r\n\r\n    reload() {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    callback: ((activeKey: string) => void) | undefined;\r\n    render() {\r\n        return (\r\n            <div className=\"addUser_main\">\r\n                <div className=\"userAdd\">\r\n                    <div className=\"addTabs\">\r\n                        <Tabs onChange={this.callback} type=\"card\">\r\n                            <TabPane tab=\"添加用户\" key=\"1\">\r\n                                <UserAdd reload={() => this.reload()}></UserAdd>\r\n                            </TabPane>\r\n                            <TabPane tab=\"更新用户\" key=\"2\">\r\n                                <UpdateUser></UpdateUser>\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </div>\r\n                    {AddUserConfig.map((item, index) => {\r\n                        return (\r\n                            <div className=\"addTabs\" key={index}>\r\n                                <Tabs onChange={this.callback} type=\"card\">\r\n                                    <TabPane tab={item.tab} key='1'>\r\n                                        {item.com}\r\n                                    </TabPane>\r\n                                </Tabs>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ContentBox({\r\n    title: \"添加用户\",\r\n    Module: AddUser,\r\n});\r\n"],"sourceRoot":""}