{"version":3,"sources":["components/ContentBox.tsx","api/exam.ts","views/main/Main-ExamEdit.tsx"],"names":["ContentBox","props","style","width","height","padding","background","overflowY","title","borderRadius","Module","this","Component","_getExamList","val","request","get","params","_getExam","url","_getAnswer","_correctExam","exam_student_id","score","put","_getTestDetail","id","_getTestList","_getTestType","_getTestSubject","_addTest","values","post","_TestDetail","exam_exam_id","_getQues","_getQuesType","_getQuesCon","subject_id","exam_id","questions_type_id","Option","Select","onFinishFailed","errorInfo","console","log","ExamEdit","state","tit","time","show","sub","selectedTags","type","questype","ques","subdata","quesdata","typedata","fields","visible","current","subid","detailitem","itemdata","showDrawer","setState","onClose","getDate","start_time","String","onFinish","a","Object","assign","res","data","code","message","info","showModal","item","filter","handleOk","e","handleCancel","history","location","getTestSubject","getTestType","getQuesType","getQues","tag","checked","nextSelectedTags","t","arr","push","index","findIndex","forEach","splice","className","placement","closable","initialValues","name","Item","marginRight","onClick","all","map","key","change_span","subject_text","label","rules","required","marginBottom","value","exam_name","questions_type_text","htmlType","questions_id","color","addTest","Remove","questions_stem","to","onOk","onCancel","questions_answer"],"mappings":"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","file":"static/js/20.efac0003.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\ninterface Props {\r\n    Module: any\r\n    title: string\r\n}\r\n\r\nconst ContentBox = (props:Props):any => {\r\n    return class ContentBox extends Component {\r\n        render() {\r\n            return <div style={{width:\"100%\",height:\"100%\",padding: '20px',background:'#f0f2f5',overflowY:'auto'}}>\r\n                    <h2 style={{ padding: '10px 0' }}>{props.title}</h2>\r\n                    <div style={{ width:\"100%\",height:\"100%\",background:'#fff',borderRadius:'10px'}}>\r\n                        <props.Module {...this.props}/>\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ContentBox\r\n\r\n//高阶组件，用于content的样式和标题展示","/*\r\n * @Descripttion: \r\n * @version: 1.0\r\n * @Author: 赵舒婷\r\n * @Date: 2020-10-20 13:20:29\r\n * @LastEditors: 赵舒婷\r\n * @LastEditTime: 2020-10-20 20:37:49\r\n */\r\nimport request from '@/utils/request'\r\nexport function _getExamList(val:any){ //拿班级对应的学生名单\r\n    let url = '/exam/student'\r\n    return request.get(url,{\r\n        params:val\r\n    })\r\n}\r\nexport function _getExam(val:string){ //通过试卷id获取试卷\r\n    let url = `/exam/exam/${val}`\r\n    return request.get(url)\r\n\r\n}\r\nexport function _getAnswer(val:string){ //通过学生id获取试卷详情\r\n    let url = `/exam/student/${val}`\r\n    return request.get(url)\r\n\r\n}  \r\n\r\nexport function _correctExam({exam_student_id,score}:any){ //批改分数\r\n    let url = `/exam/student/${exam_student_id}`\r\n    return request.put(url,{score})\r\n}\r\n\r\nexport function _getTestDetail(id:string){\r\n    let url='/exam/exam'\r\n    return request.get(url,{params:{id}})\r\n}\r\n//试题列表\r\n\r\nexport function _getTestList() {\r\n    let url='/exam/exam'\r\n    return request.get(url)\r\n};\r\n//考试类型\r\nexport function _getTestType(){\r\n    let url='/exam/examType'\r\n    return request.get(url)\r\n}\r\n//选择课程\r\nexport function _getTestSubject(){\r\n    let url='/exam/subject'\r\n    return request.get(url)\r\n}\r\n\r\n//添加试卷\r\nexport function _addTest(values:any){\r\n    let url='/exam/exam'\r\n    return request.post(url,values)\r\n}\r\n//试卷详情\r\nexport function _TestDetail({exam_exam_id}:any){\r\n    let url=`/exam/exam`\r\n    return request.get(url,exam_exam_id)\r\n}\r\n//试题获取\r\nexport function _getQues(){\r\n    let url='/exam/questions/new'\r\n    return request.get(url)\r\n}\r\n//问题类型\r\nexport function _getQuesType(){\r\n    let url='/exam/getQuestionsType'\r\n    return request.get(url)\r\n}\r\n//按条件获取试题\r\n\r\nexport function _getQuesCon(subject_id: any,exam_id:any,questions_type_id:any)\r\n{\r\n    let url=`/exam/questions/condition?subject_id=${subject_id}&exam_id=${exam_id}&questions_type_id=${questions_type_id}`;\r\n    return request.get(url)\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button, Drawer, Tag, Form, Select, Modal, message } from 'antd'\r\nimport { NavLink } from 'react-router-dom'\r\nimport ContentBox from '@/components/ContentBox'\r\nimport { _addTest, _getTestSubject, _getTestType, _getQuesType, _getQues, _getQuesCon } from '@/api/exam'\r\nconst { Option } = Select;\r\ninterface Props {\r\n    history: any\r\n\r\n}\r\ninterface State {\r\n\r\n}\r\nconst onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n};\r\nclass ExamEdit extends Component<Props, State> {\r\n    state = {\r\n        tit: '',\r\n        time: '',\r\n        show: false,\r\n        sub: [],\r\n        selectedTags: ['Books'],\r\n        type: [],\r\n        questype: [],\r\n        ques: [],\r\n        subdata: [],\r\n        quesdata: [],\r\n        typedata: [],\r\n        fields: {\r\n            subject_id: '',\r\n            exam_id: '',\r\n            questions_type_id: '',\r\n        },\r\n        visible: false,\r\n        current: -1,\r\n        subid: '',\r\n        detailitem: [],\r\n        itemdata: []\r\n    }\r\n    componentDidMount() {\r\n        let values = this.props.history.location.state.values\r\n        let { title, start_time } = values\r\n        this.getDate(title, start_time)\r\n        this.getTestSubject()\r\n        this.getTestType()\r\n        this.getQuesType()\r\n        this.getQues()\r\n    }\r\n    //抽屉显示隐藏\r\n    showDrawer = () => {\r\n        this.setState({\r\n            show: true\r\n        })\r\n    };\r\n    onClose = () => {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    };\r\n    //获取数据\r\n    getDate = (title: string, start_time: string) => {\r\n        if (title) {\r\n            this.setState({\r\n                tit: title,\r\n                time: String(start_time),\r\n            }, () => {\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n    //查询\r\n    onFinish = async (values: any) => {\r\n        values = Object.assign(this.state.fields, values, {\r\n            subject_id: this.state.subid,\r\n        })\r\n        const res = await _getQuesCon(values.subject_id, values.exam_id, values.questions_type_id);\r\n        if (res.data.code) {\r\n            message.info('查询成功');\r\n            this.setState({\r\n                ques: res.data.data\r\n            })\r\n        } else {\r\n            message.info('查询失败');\r\n        }\r\n    };\r\n    handleChange(tag: string, checked: any) {\r\n        const { selectedTags } = this.state;\r\n        const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n        console\r\n            .log('You are interested in: ', nextSelectedTags);\r\n        this.setState({ selectedTags: nextSelectedTags });\r\n        let arr = []\r\n        arr.push(tag)\r\n        this.setState({\r\n            subdata: arr\r\n        })\r\n\r\n    }\r\n    //课程\r\n    async getTestSubject() {\r\n        const res = await _getTestSubject();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                sub: res.data.data\r\n            })\r\n        }\r\n    }\r\n    //考试类型\r\n    async getTestType() {\r\n        const res = await _getTestType();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                type: res.data.data\r\n            })\r\n        }\r\n    }\r\n    //问题类型\r\n    async getQuesType() {\r\n        const res = await _getQuesType();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                questype: res.data.data\r\n            })\r\n        }\r\n    }\r\n    showModal = (item: any) => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n\r\n        let res = this.state.ques.filter((val: any) => {\r\n            return val.title === item.title\r\n        });\r\n        this.setState({\r\n            detailitem: res\r\n        })\r\n        console.log(res);\r\n    };\r\n\r\n    handleOk = (e: any) => {\r\n        console.log(e);\r\n\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    handleCancel = (e: any) => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    //获取所有问题列表\r\n    async getQues() {\r\n        const res = await _getQues();\r\n        if (res.data.code) {\r\n            this.setState({\r\n                ques: res.data.data\r\n            })\r\n        }\r\n\r\n    }\r\n    change_span(index: number, id: string) {\r\n        this.setState({\r\n            current: index,\r\n            subid: id\r\n        })\r\n    }\r\n\r\n    all() {\r\n        this.getQues()\r\n        this.setState({\r\n            current: -1\r\n        })\r\n    }\r\n    addTest(item: any) {\r\n        const index = this.state.itemdata.findIndex(val => item === val)\r\n        let arr = [...this.state.itemdata, item]\r\n\r\n        if (index === -1) {\r\n            arr.forEach(val => {\r\n                if (item === val) {\r\n                    this.setState({\r\n                        itemdata: arr\r\n                    })\r\n                }\r\n            })\r\n            message.info('添加成功')\r\n        } else {\r\n            message.info('不能重复添加')\r\n        }\r\n\r\n    }\r\n    Remove(index: number) {\r\n        let arr = [...this.state.itemdata].splice(index + 1, 1)\r\n        this.setState({\r\n            itemdata: arr\r\n        })\r\n        message.info('删除成功')\r\n    }\r\n    render() {\r\n        const { sub, type, ques, questype } = this.state;\r\n        return (\r\n            <div className='s-create'>\r\n                <Drawer\r\n                    title=\"所有题目\"\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    onClose={this.onClose}\r\n                    visible={this.state.show}\r\n                    width={800}\r\n                >\r\n                    <Form\r\n                        initialValues={this.state.fields}\r\n                        name=\"basic\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Form.Item\r\n                            name='subject_id'\r\n                        >\r\n                            <div className='s-sub'>\r\n                                <span style={{ marginRight: 8 }}>课程类型：</span>\r\n                                <span onClick={() => this.all()} className={this.state.current == -1 ? 'active' : ''}>All</span>\r\n                                {sub.map((item: any, index: number) => (\r\n                                    <span key={item.subject_id}\r\n                                        onClick={() => this.change_span(index, item.subject_id)}\r\n                                        className={index == this.state.current ? 'active' : ''}\r\n                                    >\r\n                                        {item.subject_text}\r\n                                    </span>\r\n                                ))}\r\n                            </div>\r\n                        </Form.Item>\r\n                        <div className=\"s-detail-search\">\r\n                            <Form.Item\r\n                                label=\"考试类型\"\r\n                                name='exam_id'\r\n                                rules={[{ required: true, message: '请输入课程!' }]}\r\n                                style={{ marginBottom: '70px' }}\r\n                            >\r\n                                <Select style={{ width: '120px' }}>\r\n                                    {\r\n                                        type.map((item: any) => {\r\n                                            return <Option value={item.exam_id} key={item.exam_id}>{item.exam_name}</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                label=\"考试类型\"\r\n                                name='questions_type_id'\r\n                                rules={[{ required: true, message: '请输入课程!' }]}\r\n                                style={{ marginBottom: '70px' }}\r\n                            >\r\n                                <Select style={{ width: '120px' }}>\r\n                                    {\r\n                                        questype.map((item: any) => {\r\n                                            return <Option value={item.questions_type_id} key={item.questions_type_id}>{item.questions_type_text}</Option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" >\r\n                                    查询\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </div>\r\n                    </Form>\r\n                    <div className=\"s-list\">\r\n                        {\r\n                            ques.map((item: any) => {\r\n                                return (\r\n                                    <div key={item.questions_id} className='s-list-item'>\r\n                                        {item.title}\r\n\r\n                                        <div className=\"s-item-type\">\r\n\r\n                                            <span>\r\n                                                <Tag color=\"blue\" className='Tag'>{item.subject_text}</Tag>\r\n                                                <Tag color=\"purple\" className='Tag'>{item.exam_name}</Tag>\r\n                                                <Tag color=\"orange\" className='Tag'>{item.questions_type_text}</Tag>\r\n                                            </span>\r\n                                            <span><p onClick={() => this.addTest(item)}>添加</p><p onClick={() => this.showModal(item)}>详情</p></span>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Drawer>\r\n                <div className=\"create-box\">\r\n                    <Button id='btn_one' onClick={this.showDrawer}> + 添加试题</Button>\r\n                    <h2>{this.state.tit}</h2>\r\n                    <p>考试时间：1小时30分钟 监考人：刘于 开始考试时间：{this.state.time} 阅卷人：刘于</p>\r\n                    {\r\n                        this.state.itemdata.map((item: any, index: number) => {\r\n                            return <div key={index} className='s-create-item'>\r\n                                <span onClick={() => this.Remove(index)}>删除</span>\r\n                                <b>  {item.title}</b>\r\n                                <p className='s-answer'> {item.questions_stem}</p>\r\n                            </div>\r\n                        })\r\n                    }\r\n                    <Button type=\"primary\" id='btn_two'><NavLink to='/index/examList'> + 创建试卷</NavLink></Button>\r\n                </div>\r\n\r\n                <Modal\r\n                    title='详情'\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    {\r\n                        this.state.detailitem.map((item: any, index: number) => {\r\n                            return <div key={index}>\r\n                                <b>{item.title}</b>\r\n                                <div className='s-answer'>{item.questions_answer}</div>\r\n                            </div>\r\n                        })\r\n                    }\r\n                </Modal>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContentBox({\r\n    title: '创建试卷',\r\n    Module: ExamEdit\r\n})\r\n\r\n"],"sourceRoot":""}